{
    "swagger": "2.0",
    "info": {
        "description": "GoInk is a template for quickly building a Go web server",
        "title": "goink",
        "contact": {
            "name": "0xmmq",
            "url": "https://github.com/mmqnym",
            "email": "mail@mmq.dev"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/GoInk/blob/main/LICENSE"
        },
        "version": "1.0"
    },
    "host": "localhost:9000",
    "basePath": "/api/v1",
    "paths": {
        "/sample/jwt/get": {
            "get": {
                "description": "This API will generate JWT which users can use on some APIs that require authentication",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "Generating JWTs for Authentication",
                "operationId": "v1-sample-generate-jwt",
                "responses": {
                    "200": {
                        "description": "Success\" response=`{\"token\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJFeGFtcGxlSWQiLCJleHAiOjE3MTc3NDYyMTUsIm5iZiI6MTcxNzY1OTgxNSwiaWF0IjoxNzE3NjU5ODE1fQ.BOYdOVsiPbK5nfhsYzX4G_EciVlbZ3LM2pCUQFjRwZo\"}`",
                        "schema": {
                            "$ref": "#/definitions/response.GenerateJWT"
                        }
                    },
                    "500": {
                        "description": "Failure\" response=`{\"error\": \"something went wrong\"}`",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/sample/jwt/test": {
            "post": {
                "description": "This API will check if the JWT is valid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "Verifying JWTs",
                "operationId": "v1-sample-test-jwt",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success\" response=`{\"userID\": \"ExampleID\"}`",
                        "schema": {
                            "$ref": "#/definitions/response.TestJWT"
                        }
                    }
                }
            }
        },
        "/sample/ping": {
            "get": {
                "description": "This API will return 200 if the server is running normally",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "Test the server is running normally",
                "operationId": "v1-sample-ping",
                "responses": {
                    "200": {
                        "description": "Success\" response=`{\"message\": \"pong\"}`",
                        "schema": {
                            "$ref": "#/definitions/response.Ping"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "response.GenerateJWT": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "response.Ping": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.TestJWT": {
            "type": "object",
            "properties": {
                "userID": {
                    "type": "string"
                }
            }
        }
    }
}